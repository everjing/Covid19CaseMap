{"version":3,"sources":["components/CountyCard.js","services/CovidCaseService.js","util/MapUtil.js","components/StateCard.js","components/CovidMap.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","CountyCard","props","classes","Card","className","CardContent","Typography","color","gutterBottom","province","variant","component","county","stats","confirmed","deaths","CovidCaseService","axios","get","MapUtil","points","result","total","states","point","coordinates","i","bounds","nw","se","longitude","lng","latitude","lat","StateCard","state","Marker","children","CovidMap","zoom","style","height","width","bootstrapURLKeys","key","defaultCenter","this","center","defaultZoom","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","map","maps","handleMapInitialized","onChange","setState","renderPoints","a","response","data","console","log","clusterPoints","Array","isArray","push","length","Component","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a995909.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\n//import CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n//import Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function CountyCard(props) {\n  const classes = useStyles();\n  //const bull = <span className={classes.bullet}>•</span>;\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          {props.province}\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          {props.county}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          Confirmed: {props.stats.confirmed}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          Death: {props.stats.deaths}\n          \n        </Typography>\n      </CardContent>\n      {/* <CardActions>\n        <Button size=\"small\">Learn More</Button>\n      </CardActions> */}\n    </Card>\n  );\n}\n","import axios from 'axios';\nexport const CovidCaseService = {\n  getUsData: function() {\n      return axios.get(\"https://corona.lmao.ninja/v2/jhucsse/counties\")\n  }\n};","export const MapUtil = {\n    // 1 - 10 state points\n    // 11 - 20 county points\n    createClusterPoints: function (points) {\n        const result = { // {1-10 : states, 11-20: points}\n            total: 0\n        };\n        if (!points) {\n            return result;\n        }\n        const states = {}; // {state,info}\n        for (const point of points) {\n            result.total += point.stats.confirmed;\n\n            states[point.province] = states[point.province] || {\n                confirmed: 0,\n                deaths: 0\n            };\n\n            states[point.province].confirmed += point.stats.confirmed;\n            states[point.province].deaths += point.stats.deaths;\n            states[point.province].coordinates = point.coordinates;\n        }\n        for (let i = 1; i <= 8; i++) {\n            result[i] = states;\n        }\n\n        for (let i = 9; i <= 20; i++) {\n            result[i] = points;\n        }\n        return result;\n    },\n\n    inBoundary: function (coordinates, bounds) {\n        return coordinates && bounds && bounds.nw && bounds.se && ((coordinates.longitude >= bounds.nw.lng && coordinates.longitude <= bounds.se.lng) || (coordinates.longitude <= bounds.nw.lng && coordinates.longitude >= bounds.se.lng))\n            && ((coordinates.latitude >= bounds.se.lat && coordinates.latitude <= bounds.nw.lat) || (coordinates.latitude <= bounds.se.lat && coordinates.latitude >= bounds.nw.lat));\n    }\n\n};","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\n//import CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n//import Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function StateCard(props) {\n  const classes = useStyles();\n  //const bull = <span className={classes.bullet}>•</span>;\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          {props.state}\n        </Typography>\n        {/* <Typography variant=\"h5\" component=\"h2\">\n          {props.province}\n        </Typography> */}\n        <Typography variant=\"body2\" component=\"p\">\n          Confirmed: {props.confirmed}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          Death: {props.deaths}\n        </Typography>\n      </CardContent>\n      {/* <CardActions>\n        <Button size=\"small\">Learn More</Button>\n      </CardActions> */}\n    </Card>\n  );\n}\n","import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport CountyCard from './CountyCard';\nimport { CovidCaseService } from '../services/CovidCaseService';\nimport { MapUtil } from '../util/MapUtil';\nimport StateCard from './StateCard';\n \nconst Marker = ({ children }) => children;\n \nclass CovidMap extends Component {\n  static defaultProps = {\n    center: {\n      lat: 42,\n      lng: -74\n    },\n    zoom: 11\n  };\n \n   state = {\n       zoom:11,\n       bounds: null,\n       points: {} // saved all points from the API\n   };\n\n\n\n  render() {\n    return (\n      // Important! Always set the container height explicitly\n      <div style={{ height: '100vh', width: '100%' }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: \"AIzaSyAgbUfY70EqyziS2P6NEA2Y1lGf-PgwADU\" }}\n          defaultCenter={this.props.center}\n          defaultZoom={this.props.zoom}\n          yesIWantToUseGoogleMapApiInternals\n          onGoogleApiLoaded={({ map, maps }) => this.handleMapInitialized()}\n          onChange={({zoom, bounds}) => {\n              this.setState({\n                  zoom,\n                  bounds\n              });\n          }}\n        >\n          {this.renderPoints()}\n        </GoogleMapReact>\n      </div>\n    );\n  }\n\n    // ES2017 async await\n  async handleMapInitialized() {\n      try {\n      const response = await CovidCaseService.getUsData() // Promise\n      this.setState ({\n          points : MapUtil.createClusterPoints(response.data)\n      });\n      } catch (e) {\n          console.log(e);\n      }\n      //TODO render data from http://corona.lmao.ninja/v2/jhucsse/counties\n  }\n  \n  renderPoints() {\n    const clusterPoints = this.state.points[this.state.zoom];\n    //console.log(clusterPoints);\n    const result = [];\n    if (!clusterPoints) {\n        return result;\n    }\n\n    if (Array.isArray(clusterPoints)) { // county points\n      for (const point of clusterPoints) {\n          if (MapUtil.inBoundary(point.coordinates, this.state.bounds)) {\n              result.push(\n                  <Marker key={`${point.province}-${point.county}`}\n                          lat={point.coordinates.latitude} \n                          lng={point.coordinates.longitude}>\n                      <CountyCard {...point}/>\n                  </Marker>\n              );\n          }\n      }\n    } else { // state points \n     for (const state in clusterPoints) {\n         const point = clusterPoints[state];\n         if (MapUtil.inBoundary(point.coordinates, this.state.bounds)) {\n            result.push(\n                <Marker key={state}\n                        lat={point.coordinates.latitude} \n                        lng={point.coordinates.longitude}>\n                    <StateCard {...point} state = {state}/>\n                </Marker>\n            );\n        }\n        if (result.length >= 15) {//max number of cards showing in map\n            break;\n        }\n     }\n    }\n    //console.log(result);\n    return result;\n  }\n \n}\n\nexport default CovidMap;","//import logo from './logo.svg';\nimport './App.css';\nimport CovidMap from './components/CovidMap';\n\nfunction App() {\n  return (\n    <div >\n      <CovidMap/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}